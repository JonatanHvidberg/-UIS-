$$WPUtil.guaranteeExistence($$WP,"Clinical.ToDo.Components");$$WP.Clinical.ToDo.Components.ToDoListComponent=function WP$Clinical$ToDo$Components$ToDoListComponent(b){var a=this;a.Components$TemplateComponent(b);a.Url=makeLink("Clinical/ToDo/Load?RegistryID="+a.RegistryID);if(a.IsPOC){a.FromURLQueryParameters="fromplanofcare=1";if(a.RegistryID!=="")a.FromURLQueryParameters=a.FromURLQueryParameters+"&registryid="+a.RegistryID}};$$WP.Clinical.ToDo.Components.ToDoListComponent.prototype={Class:"ToDolist pocdefault",ToolbarButtons:null,template:$$WP.Templates.Clinical.ToDoList,Url:makeLink("Clinical/ToDo/Load"),FromURLQueryParameters:"fromhomepage=1",IsPOC:false,RegistryID:"",setData:function $$WP$Clinical$ToDo$setData(b){var l="healthadvisory",h=this,f,j,k,q,c,g,m,n,a,d,p=[],i=[],e=[],o=0;b=h.updateMnemonics(b);if(b.ToDoEventsList){for(f=0;f<b.ToDoEventsList.length;f++){a=b.ToDoEventsList[f];c=a.EventDate;a.EventType!==l&&a.EventType!=="order"&&p.push(c);c=new Date(c);j=c.getMonth();q=c.getDate();k=c.getFullYear();b.ToDoEventsList[f].EventDay=getDayName(c.getDay());if(a.EventType===l){if(h.__haTopicWillBeSingleEntry(a.HaTopicEvent))b.ToDoEventsList[f].EventIndex=o++}else b.ToDoEventsList[f].EventIndex=o++;if(!isNaN(j)&&!isNaN(k)){g=h.ContainerComponent.getFormattedDateID(q,j,k);d=h.ContainerComponent.getFormattedMonthID(j,k);a.FormattedDateId=g;if(a.EventType!==l&&a.EventType!=="order"){if(i[g])i[g].events.push(a);else{i[g]={events:[]};i[g].events.push(a)}if(e[d]){m=new Date(e[d].StartEvent.EventDate);n=new Date(e[d].EndEvent.EventDate);if(c<m)e[d].StartEvent=a;if(c>n)e[d].EndEvent=a}else e[d]={StartEvent:a,EndEvent:a}}}}b.HighlightDays=p;b.MonthsMap=e;b.EventDaysMap=i}b=b||{};h.Components$TemplateComponent$setData(b);h.ContainerComponent.setData(b)},updateMnemonics:function $$WP$Clinical$ToDo$updateMnemonics(f){var hb="@MYCHART@CONDITIONTITLE@",gb="@MYCHART@EXPECTEDDATECOMMENT@",fb="@MYCHART@EXPECTEDDATE@",eb="expected",H="@MYCHART@EXPECTEDDATESTRING@",G="@MYCHART@EXPECTEDSTRING@",db="@MYCHART@ORDERINTERVAL@",cb="@MYCHART@ORIGINALSTANDINGOCCURANCES@",bb="@MYCHART@STANDINGOCCURANCES@",ab="@MYCHART@ORDEREDDATE@",r="</span>",q="<span class='orderval'>",F="@MYCHART@EXPIRYDATE@",Z="@MYCHART@EVENTNAME@",k="scheduling.orders",Y="@MYCHART@APPTFORMATTEDDATE@",X="@MYCHART@TBD@",W="@MYCHART@ARRIVALTIME@",V="@MYCHART@TIMEZONE@",p="@MYCHART@PROVIDERNAME@",U="@MYCHART@PROVNAME@",T="clinical.deptdrivinginstructions",S="@MYCHART@DATE@",o="Visits",w="@MYCHART@VISITTYPE@",m="visits",R="@MYCHART@HAAPPTDATE@",Q="@MYCHART@HATOPICNAME@",P="RequestApptButtonText",O="lastdone",v="@MYCHART@LASTDONEDATE@",u=null,N="rowdetailstitle",g="clinical.healthmaintenance",n="@MYCHART@CONTENTNAME@",i="",h=false,e="clinical.todo",j=this;if(f.Text==="ErrorCode")f.ErrorMessage=$$WP.Strings.getForTemplate(f.Value,e);if(f.ToDoEventsList)if(f.ToDoEventsList.length>0){var jb=", ",M,B,s,ib=[],x=[],K=h;f.RequestAllApptURL="inside.asp?mode=hmsched&widgetmode=1&allowReasonSelection=1&selectAllDue=1";if(j.IsPOC){f.RequestAllApptURL+="&fromplanofcare=1";if(j.RegistryID!==i)f.RequestAllApptURL+="&registryid="+j.RegistryID}else f.RequestAllApptURL+="&fromhomepage=1";for(var C=0;C<f.ToDoEventsList.length;C++){var c=f.ToDoEventsList[C],z,y,E;c.FocusAnchorText=$$WP.Strings.getForTemplate("tabtext",e);if($$WPUtil.IsNullOrEmpty(c.EventName))c.EventName=" ";if($$WPUtil.IsNullOrEmpty(c.EventTime))c.EventTime=" ";switch(c.EventType){case"healthadvisory":var d=c.HaTopicEvent;$$WP.Strings.addMnemonic(n,c.EventName,i,g);c.RowClickTitle=$$WP.Strings.getForTemplate(N,g);$$WP.Strings.removeMnemonic(n,g);c.WeekViewFocusBackAnchor=$$WP.Strings.getForTemplate("weekviewfocusbackanchor",e);if(c.HaTopicEvent.StatusCode!==u&&c.HaTopicEvent.StatusCode.length>0)d.Status=j.getHMStatus(d);if(typeof d.DueDateOverride!=="undefined"&&d.DueDateOverride.length>0&&(d.StatusCode==="100_OVERDUE"||d.StatusCode==="200_DUE"))if(d.DueDateOverride==="<BLANK>")d.Status=i;else d.Status=d.DueDateOverride;if(d.ContentLinkURL){d.HaKnowMore=$$WP.Strings.getForTemplate("learnmore",g);$$WP.Strings.addMnemonic(n,c.EventName,i,g);d.AboutHoverText=$$WP.Strings.getForTemplate("abouthover",g);$$WP.Strings.removeMnemonic(n,g)}if(d.LastCompletedDateISO&&d.LastCompletedDateISO.length>0){$$WP.Strings.addMnemonic(v,d.FormattedLastCompletedDate,i,g);$$WP.Strings.addMnemonic(n,c.EventName,i,g);d.LastDone=$$WP.Strings.getForTemplate(O,g);d.LastDoneLinkTitle=$$WP.Strings.getForTemplate("lastdoneanchortitle",g);$$WP.Strings.removeMnemonic(n,g);$$WP.Strings.removeMnemonic(v,g)}y="inside.asp?mode=Scheduling&workflow=procedure&rfvId="+encodeURIComponent(d.SchedReasonForVisit)+"&topic="+encodeURIComponent(d.TopicId);y=y+"&"+j.FromURLQueryParameters;d.ScheduleApptURL=y;d.ScheduleBtnText=$$WP.Strings.getForTemplate("ScheduleApptButtonText",g);z="inside.asp?mode=hmsched&widgetmode=1&reasonforvisit="+encodeURIComponent(c.EventName)+"&topic="+encodeURIComponent(d.TopicId)+"&allowReasonSelection=1";z=z+"&"+j.FromURLQueryParameters;d.RequestApptURL=z;d.RequestBtnText=$$WP.Strings.getForTemplate(P,g);$$WP.Strings.addMnemonic(Q,c.EventName,i,g);d.RequestAppointmentHoverText=$$WP.Strings.getForTemplate("requestappointmenttooltip",g);d.ScheduleAppointmentHoverText=$$WP.Strings.getForTemplate("ScheduleApptTooltip",g);$$WP.Strings.removeMnemonic(Q,g);d.LastDoneDatesURL="inside.asp?mode=healthmaint&widgetmode=1&topic=1&topicid="+encodeURIComponent(d.TopicId)+"&name="+encodeURIComponent(d.Name);d.LastDoneDatesURL=d.LastDoneDatesURL+"&"+j.FromURLQueryParameters;$$WP.Strings.addMnemonic(R,d.FormattedSchedAppointmentDateISO,i,g);d.ScheduledForApptText=$$WP.Strings.getForTemplate("schedule_health_maint_info",g);$$WP.Strings.removeMnemonic(R,g);if(j.__haTopicWillBeSingleEntry(d))x.push(c);else{ib.push(c);if(d.CanRequestAppointment)K=true}break;case"appointment":var a=f.ToDoEventsList[C].AppointmentEvent,L;if(a.IsApptDetailsEnabled){a.DetailsURL="Visits/VisitDetails?widgetmode=1&csn="+a.Csn;a.DetailsURL=a.DetailsURL+"&"+j.FromURLQueryParameters;a.DetailsHoverText=$$WP.Strings.getForTemplate("DetailsButtonTooltip",m)}if(a.IsDrivingDirectionsEnabled){$$WP.Strings.addMnemonic(w,c.EventName,h,o);$$WP.Strings.addMnemonic(S,a.Date,h,o);a.DrivingDirectionsLabel=$$WP.Strings.getForTemplate("DrivingDirectionsButtonLabel",o);a.DrivingDirectionsClearLabel=$$WP.Strings.getForTemplate("ButtonClearLabel",o);$$WP.Strings.removeMnemonic(w,o);$$WP.Strings.removeMnemonic(S,o)}a.LocationHoverText=$$WP.Strings.getForTemplate("newwindowwarning",T);a.LocationTitle=$$WP.Strings.getForTemplate("defaultdriving",T);if(a.CanECheckIn){if(a.ECheckIn!==u&&a.ECheckIn.HasBarcodeStep&&!a.ECheckIn.IsAdmission&&!a.ECheckIn.IsSurgery){a.EcheckinBtnText=$$WP.Strings.getForTemplate("ECheckInButtonLabel",m);a.ECheckinTooltip=$$WP.Strings.getForTemplate("ECheckInButtonTooltip",m)}else{a.EcheckinBtnText=$$WP.Strings.getForTemplate("UpdateInfoButtonText",m);a.ECheckinTooltip=$$WP.Strings.getForTemplate("UpdateInfoButtonTooltip",m)}a.EcheckinURL="echeckin?csn="+a.NextIncompleteVisitECheckInCsn+"&widgetmode=1&echeckinredirect=1";a.EcheckinURL=a.EcheckinURL+"&"+j.FromURLQueryParameters}if(a.ECheckIn!==u&&(a.ECheckIn.IsAdmission||a.ECheckIn.IsSurgery))a.ECheckinDoneText=$$WP.Strings.getForTemplate("EcheckInCompletedTextInpatient",m);else a.ECheckinDoneText=$$WP.Strings.getForTemplate("EcheckInCompletedText",m);a.AddToCalendarLabel=$$WP.Strings.getForTemplate("AddToCalendarLabel",m);a.ProviderNames=i;a.ProviderImageUrl=u;E=0;if(a.Providers&&a.Providers.length>0){E=a.Providers.length;for(var l=0;l<E;l++){s=a.Providers[l].Name;if($$WPUtil.IsNullOrEmpty(s))s=" ";if(a.Providers[l].Department)if(l===0&&!a.Telemedicine)a.Providers[0].PhoneNumber=j.__getApptPhone(a.Providers[l].Department);if(f.IsProvDetailsEnabled){a.Providers[l].EncryptedId=encodeURIComponent(a.Providers[l].EncryptedId);M="inside1.asp?mode=provider&widgetmode=1&id="+a.Providers[l].EncryptedId;$$WP.Strings.addMnemonic(U,s,i,e);L=$$WP.Strings.getForTemplate("providerdetailstitle",e);a.Providers[l].ProviderDetailsURL=M;a.Providers[l].ProviderDetailsTitle=L;$$WP.Strings.removeMnemonic(U,e)}if(s!==" "){a.ProviderNames=a.ProviderNames+jb;a.ProviderNames=a.ProviderNames+s}}a.ProviderNames=a.ProviderNames.replace(jb,i)}$$WP.Strings.addMnemonic(w,c.EventName,i,e);var kb=$$WP.SimpleTemplates.Span({"class":"providername subtlecolor"},a.ProviderNames);$$WP.Strings.addMnemonic(p,kb[0].outerHTML,i,e,$$WP.Strings.EncodingTypes.None);$$WP.Strings.addMnemonic("@MYCHART@APPTTIME@",c.EventTime,i,e);if(!$$WPUtil.IsNullOrEmpty(a.ProviderNames))a.ListViewTitle=$$WP.Strings.getForTemplate("todolistappointmenttitle",e);else a.ListViewTitle=c.EventName;a.ListViewFormattedDate=c.EventFormattedDate;c.EventFormattedDateForTile=a.Date;if($$WPUtil.IsNullOrEmpty(c.EventTime)||$$WPUtil.IsNullOrEmpty(c.EventTime.trim()))a.IsTimeToBeDetermined=true;if(a.EncounterIsSurgery||a.IsTimeToBeDetermined){a.TileViewTitle=c.EventName;c.EventFormattedDateForTile=a.ListViewFormattedDate}else{$$WP.Strings.addMnemonic(V,a.TimeZone,i,e);a.AppointmentTimeLabel=$$WP.Strings.getForTemplate("appointmenttimelabel",e);if(!$$WPUtil.IsNullOrEmpty(a.ArrivalTime)){$$WP.Strings.addMnemonic(W,a.ArrivalTime,i,e);a.TileViewTitle=$$WP.Strings.getForTemplate("todotiletitlearrivaltime",e);a.ArrivalTimeText=$$WP.Strings.getForTemplate("ArrivalTimeLabel",e);$$WP.Strings.removeMnemonic(W,e)}else a.TileViewTitle=$$WP.Strings.getForTemplate("todotileappointmenttitle",e);$$WP.Strings.removeMnemonic(V,e)}if(a.IsTimeToBeDetermined){$$WP.Strings.addMnemonic(w,c.EventName,h,e);$$WP.Strings.addMnemonic(X,$$WP.Strings.get("tbdstring",e),h,e,$$WP.Strings.EncodingTypes.None);$$WP.Strings.addMnemonic(Y,c.EventFormattedDate,h,e);B=$$WP.Strings.getForTemplate("todolisttbddate",e);a.ListViewFormattedDate=B;a.Date=B;c.EventFormattedDateForTile=B;a.ArrivalTimeText=u;$$WP.Strings.removeMnemonic(X,e)}c.RowClickTitle=$$WP.Strings.getForTemplate(N,e);$$WP.Strings.removeMnemonic(w,e);$$WP.Strings.removeMnemonic(p,e);$$WP.Strings.removeMnemonic(Y,e);c.WeekViewEventAnchorTitle=$$WP.Strings.get("weekvieweventanchortitle",e);x.push(c);break;case"order":$$WP.Strings.setDefaultNamespace(k);var b=c.OrderEvent||c.MultipleOrderTicketEvent;$$WP.Strings.addMnemonic(Z,c.EventName,i,e);c.RowClickTitle=$$WP.Strings.getForTemplate("orderrowdetailstitle",e);$$WP.Strings.removeMnemonic(Z,e);if(!f.HideExpiredDate){if(b.ExpiredDate)$$WP.Strings.addMnemonic(F,q+b.ExpiredDate+r,h,k,$$WP.Strings.EncodingTypes.None);else $$WP.Strings.addMnemonic(F,q+$$WP.Strings.get("never")+r,h,k,$$WP.Strings.EncodingTypes.None);b.ExpiredDateString=$$WP.Strings.getForTemplate("expiry");$$WP.Strings.removeMnemonic(F)}if(!$$WPUtil.IsNullOrEmpty(b.ProviderName)&&b.OrderedDate){$$WP.Strings.addMnemonic(p,b.ProviderName);$$WP.Strings.addMnemonic(ab,b.OrderedDate);b.OrderedByString=$$WP.Strings.getForTemplate("orderedby");$$WP.Strings.removeMnemonic(p);$$WP.Strings.removeMnemonic(ab)}if(!$$WPUtil.IsNullOrEmpty(c.MultipleOrderTicketEvent)){b.OrderGroupingStrings=[];for(provider in b.ProviderGroupings){var A={};$$WP.Strings.addMnemonic(p,provider);A.orderedByString=$$WP.Strings.getForTemplate("orderedbynodate");$$WP.Strings.removeMnemonic(p);A.orderStrings=[];for(var I=0;I<b.ProviderGroupings[provider].length;I++)A.orderStrings.push(b.ProviderGroupings[provider][I]);b.OrderGroupingStrings.push(A)}}if(b.IsStanding){if(b.StandingOccurances&&b.OriginalStandingOccurances){$$WP.Strings.addMnemonic(bb,q+b.StandingOccurances,h,k,$$WP.Strings.EncodingTypes.None);$$WP.Strings.addMnemonic(cb,b.OriginalStandingOccurances+r,h,k,$$WP.Strings.EncodingTypes.None);b.RemainingString=$$WP.Strings.getForTemplate("remaining");$$WP.Strings.removeMnemonic(bb);$$WP.Strings.removeMnemonic(cb)}if(b.LastPerformedDate)$$WP.Strings.addMnemonic(v,q+b.LastPerformedDate+r,h,k,$$WP.Strings.EncodingTypes.None);else $$WP.Strings.addMnemonic(v,q+$$WP.Strings.get("never")+r,h,k,$$WP.Strings.EncodingTypes.None);b.LastDoneString=$$WP.Strings.getForTemplate(O);$$WP.Strings.removeMnemonic(v);if(b.OrderInterval){$$WP.Strings.addMnemonic(db,q+b.OrderInterval+r,h,k,$$WP.Strings.EncodingTypes.None);b.OrderIntervalString=$$WP.Strings.getForTemplate("interval");$$WP.Strings.removeMnemonic(db)}}else if(!f.HideExpectedDate){var J=$$WP.Strings.get("customexpectedstring"),t,D;if(f.ShowCustomExpectedDate&&J)$$WP.Strings.addMnemonic(G,J,h,k,$$WP.Strings.EncodingTypes.None);else $$WP.Strings.addMnemonic(G,$$WP.Strings.get("defaultexpectedstring"),h,k,$$WP.Strings.EncodingTypes.None);if($$WPUtil.IsNullOrEmpty(b.ExpectedDate)&&$$WPUtil.IsNullOrEmpty(b.ExpectedDateComment)){$$WP.Strings.addMnemonic(H,$$WP.Strings.get("asdirected"),h,k,$$WP.Strings.EncodingTypes.None);t=eb}else{if(!$$WPUtil.IsNullOrEmpty(b.ExpectedDate)){if(b.ShowApproximate){$$WP.Strings.addMnemonic(fb,b.ExpectedDate,h,k,$$WP.Strings.EncodingTypes.None);D=$$WP.Strings.getForTemplate("expecteddatewithapproximate")}else D=b.ExpectedDate;$$WP.Strings.addMnemonic(H,D,h,k,$$WP.Strings.EncodingTypes.None);t=eb}if(!$$WPUtil.IsNullOrEmpty(b.ExpectedDateComment)){$$WP.Strings.addMnemonic(gb,b.ExpectedDateComment,h,k);t="expectedwithcomment"}if(!$$WPUtil.IsNullOrEmpty(b.ExpectedDate)&&!$$WPUtil.IsNullOrEmpty(b.ExpectedDateComment))t="expecteddatewithcomment"}b.ExpectedString=$$WP.Strings.getForTemplate(t);$$WP.Strings.removeMnemonic(H);$$WP.Strings.removeMnemonic(gb);$$WP.Strings.removeMnemonic(G);$$WP.Strings.removeMnemonic(fb)}if(b.SchedulingTicketID)j.__updateTicketOrderViewModel(b);else if(b.Instructions){b.InstructionBtnText=$$WP.Strings.getForTemplate("viewinstructionsbutton");b.InstructionsBtnTitle=$$WP.Strings.getForTemplate("viewinstructionsbuttontitletext")}$$WP.Strings.clearDefaultNamespace();x.push(c)}}f.ToDoEventsList.sort(j.__sortOrders);f.HMList=ib;f.HMDetails={};f.HMDetails.RequestApptURL="inside.asp?mode=hmsched&overdues=all";f.HMDetails.CanRequestAppointment=K;f.HMDetails.OverduesHeading=$$WP.Strings.getForTemplate("overduesHeading",g);f.HMDetails.RequestBtnText=$$WP.Strings.getForTemplate(P,g);f.ToDoEventsListNew=x}else if(j.RegistryID!==i){$$WP.Strings.addMnemonic(hb,j.RegistryName,h,e);f.NoDataText=$$WP.Strings.getForTemplate("nodata_condition",e);$$WP.Strings.removeMnemonic(hb,e)}else f.NoDataText=$$WP.Strings.getForTemplate("nodata",e);return f},__updateTicketOrderViewModel:function $$WP$Clinicial$ToDo$__updateTicketOrderViewModel(a){var b="scheduling";$$WP.Strings.addMnemonic("@MYCHART@AVAILABLEDATE@",a.SchedulingTicketAvailableDate,false,b);a.SchedulingTicketLink=makeLink("inside.asp?mode=tickets&tktId="+a.SchedulingTicketID+"&"+this.FromURLQueryParameters);a.SchedulingTicketLinkTitle=$$WP.Strings.getForTemplate("schedulebuttontitletext");a.ScheduleBtnText=$$WP.Strings.getForTemplate("schedulebutton");a.HasUnschedulableTicket=a.SchedulingTicketID&&new Date<new Date(a.SchedulingTicketAvailableDateISO);a.SchedulingTicketAvailableDateString=$$WP.Strings.getForTemplate("TicketAvailableDate",b)},__sortOrders:function $$WP$Clinical$ToDo$__sortOrders(b,a){var d=!!b&&!!b.OrderEvent&&!!b.OrderEvent.HasUnschedulableTicket,c=!!a&&!!a.OrderEvent&&!!a.OrderEvent.HasUnschedulableTicket;return d&&!c?1:!d&&c?-1:0},getHMStatus:function $$WP$Clinical$ToDo$getHMStatus(b){var e="@MYCHART@LASTDONEDATE@",g="@MYCHART@POSTPONEDDATE@",c="@MYCHART@DUEDATE@",a="",k="",f,d,i,h;if(b!==null){$$WP.Strings.setDefaultNamespace("clinical.healthmaintenance");f=b.StatusCode;d=b.DueDateISO;i=b.PostponedDateISO;h=b.LastDoneDateISO;switch(f){case"100_OVERDUE":if(d.length>0){a="overduewithdate";$$WP.Strings.addMnemonic(c,b.FormattedDueDate)}else a="overdue";break;case"200_DUE":if(d.length>0){a="duewithdate";$$WP.Strings.addMnemonic(c,b.FormattedDueDate)}else a="due";break;case"300_DUESOON":if(d.length>0){a="duesoonwithdate";$$WP.Strings.addMnemonic(c,b.FormattedDueDate)}else a="duesoon";break;case"400_POSTPONED":if(i.length>0){a="postponedwithdate";$$WP.Strings.addMnemonic(g,b.FormattedPostponedDate)}else a="postponed";break;case"500_NOTDUE":if(d.length>0){a="notduewithdate";$$WP.Strings.addMnemonic(c,b.FormattedDueDate)}else a="notdue";break;case"600_ADDRESSED":if(h.length>0){a="addresswithdate";$$WP.Strings.addMnemonic(e,b.FormattedLastDoneDate)}else a="addressed";break;case"700_SATISFIED":if(h.length>0){a="completedwithdate";$$WP.Strings.addMnemonic(e,b.FormattedLastDoneDate)}else a="completed";break;default:if(f.length>0){var j=f.split("^");a="unknowntext_";if(j.length>1)a=a+j[1];$$WP.Strings.addMnemonic(g,b.FormattedPostponedDate);$$WP.Strings.addMnemonic(c,b.FormattedDueDate);$$WP.Strings.addMnemonic(e,b.FormattedLastDoneDate)}}k=$$WP.Strings.getForTemplate(a);$$WP.Strings.removeMnemonic(g);$$WP.Strings.removeMnemonic(c);$$WP.Strings.removeMnemonic(e);$$WP.Strings.clearDefaultNamespace();return k}return null},__getApptPhone:function $$WP$Clinical$ToDo$__getApptPhone(b){var a=b.SchedulingPhoneNumber;if($$WPUtil.IsNullOrEmpty(a))a=b.PhoneNumber;return a},__haTopicWillBeSingleEntry:function $$WP$Clinical$ToDo$__haTopicWillBeSingleEntry(a){return a.StatusCode!=="100_OVERDUE"&&a.StatusCode!=="200_DUE"?true:a.CanScheduleAppointment?true:false}};$$WP.Clinical.ToDo.Components.ToDoListComponent.extend("Components.TemplateComponent")