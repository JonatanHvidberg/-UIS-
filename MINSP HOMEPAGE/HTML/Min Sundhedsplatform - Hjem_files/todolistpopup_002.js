/*! Copyright (c) Epic Systems Corporation 2015-2016 */
$$WPUtil.guaranteeExistence($$WP,"Clinical.ToDo.Components");$$WP.Clinical.ToDo.Components.ToDoListPopupComponent=function WP$Clinical$ToDo$Components$ToDoListPopupComponentComponent(a){this.Components$TemplateComponent(a)};$$WP.Clinical.ToDo.Components.ToDoListPopupComponent.prototype={Class:"ToDolistPopup",ToolbarButtons:null,template:$$WP.Templates.Clinical.ToDoListPopup,refresh:function(){var d="clinical.healthmaintenance",c,b,f,e,a;this.Components$TemplateComponent$refresh();c=this.$content.find("div.hmt-previously-done");e=this;for(b=0;b<c.length;++b){f=$afe.jq(c.get(b)).children("div");a=new Epic.PatientAccess.HealthAdvisories.EllipsisControl(f,4);a.CaretCollapsedTitleText=$$WP.Strings.get("PreviouslyDoneCaretCollapsedTitleText",d);a.CaretExpandedTitleText=$$WP.Strings.get("PreviouslyDoneCaretExpandedTitleText",d);a.onCaretStateChanged=function(){e.$content.find(".cardlist.matchHeights").each($$WP.Utilities.UI.Cards.MatchHeights)}}},setData:function(a){var h="future",g="nextmonth",d="clinical.todo",f="thismonth",m,n,e,i,l,k,j,b,c;e=new Date;m=e.getMonth();n=e.getFullYear();l=(m+1)%12;i=n;if(l===0)i++;a.ThisMonth={Events:[],Class:f,Header:$$WP.Strings.getForTemplate(f,d),Id:f,EventsCount:0};a.NextMonth={Events:[],Class:g,Header:$$WP.Strings.getForTemplate(g,d),Id:g,EventsCount:0};a.Future={Events:[],Class:h,Header:$$WP.Strings.getForTemplate(h,d),Id:h,EventsCount:0};a.Overdue={Events:[],Class:"overduesection",Header:$$WP.Strings.getForTemplate("overdue",d),Id:"overdue",EventsCount:0,OverdueItemsPresent:false};for(var o=0;o<a.ToDoEventsList.length;o++){c=a.ToDoEventsList[o];b=c.EventDate;if(b!==null&&b!==""){b=new Date(b);j=b.getMonth();k=b.getFullYear();if(c.EventType==="healthadvisory"&&b<e){a.Overdue.Events.push(c);a.Overdue.OverdueItemsPresent=true;a.Overdue.EventsCount=a.Overdue.EventsCount+1}else if(m===j&&n===k){a.ThisMonth.Events.push(c);a.ThisMonth.EventsCount=a.ThisMonth.EventsCount+1}else if(l===j&&i===k){a.NextMonth.Events.push(c);a.NextMonth.EventsCount=a.NextMonth.EventsCount+1}else{a.Future.Events.push(c);a.Future.EventsCount=a.Future.EventsCount+1}}}this.Components$TemplateComponent$setData(a)}};$$WP.Clinical.ToDo.Components.ToDoListPopupComponent.extend("Components.TemplateComponent")